Od Ma≈Çgorzata Rita ≈Åyczywek do wszystkich 05:13 PM
import this
Od Ma≈Çgorzata Rita ≈Åyczywek do wszystkich 05:35 PM
https://python-ritaly.netlify.app/python_types.html
Od Ma≈Çgorzata Rita ≈Åyczywek do wszystkich 05:49 PM
distance = 120
cost = 5.04
usage = 6.4/100

result = round(distance * cost * usage, 2)

print(f'Koszt wyprawy bedzie wynosi: { result } z≈Ç')

Od Ma≈Çgorzata Rita ≈Åyczywek do wszystkich 05:59 PM
https://python-ritaly.netlify.app/python_types.html
Od Ma≈Çgorzata Rita ≈Åyczywek do wszystkich 06:15 PM
# Czy 23 + 3 bƒôdzie siƒô r√≥wnaƒá 15 + 12 ?
result1 = (23 + 3) == (15 + 12)
print(result1)

# Czy dzielenie 29 przez 7 bez reszty wynosi 5?
result2 = 29 // 7 == 5
print(result2)

# Czy 27 podzielone przez 8 daje resztƒô 3?
result3 = 27 % 8 == 3
print(result3)

# Wy≈õwietl True, je≈ºeli liczba jest parzysta.
number = int(input("Podaj liczbe ca≈ÇkowitƒÖ 1-100:"))
result4 = number % 2 == 0
print(result4)
przerwa do 18:25 
Od Maciej Cieszy≈Ñski do wszystkich 06:31 PM
Happy üç© :)
Od Ma≈Çgorzata Rita ≈Åyczywek do wszystkich 06:40 PM
https://python-ritaly.netlify.app/python_types.html#stringi
Od Ma≈Çgorzata Rita ≈Åyczywek do wszystkich 06:50 PM
https://docs.python.org/3/library/stdtypes.html#string-methods
Od Ma≈Çgorzata Rita ≈Åyczywek do wszystkich 06:59 PM
>>> test = "9"
>>> test.isdigit()
True
>>> test = "912345"
>>> test.isdigit()
True
>>> test = "912345a"
>>> test.isdigit()
False
>>> test.isdecimal()
False
>>> test = "912345"
>>> test.isdecimal()
True
Od Ma≈Çgorzata Rita ≈Åyczywek do wszystkich 07:11 PM
>>> test = 'mata'
>>> test.center(10, '*')
'***mata***'
>>> test.center(20, '*')
'********mata********'
>>> test.center(20, '---')
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: The fill character must be exactly one character long
>>> test.center(20, '-')
'--------mata--------'
>>> test.center(20)
'        mata        '
>>> url = "www.flynerd.pl"
>>> dna = "ACDGCCAAADDCDAAA"
>>> '   spacious   '.lstrip()
'spacious   '
>>> url.lstrip('w')
'.flynerd.pl'
>>> dna.rstrip('A')
'ACDGCCAAADDCD'
>>> dna = "ACDGCCAAADDCDA"
>>> dna.rstrip('A')
'ACDGCCAAADDCD'
>>> dna = "ACDGCCAAADDCD"
>>> dna.rstrip('A')
'ACDGCCAAADDCD'
>>>

Od Ma≈Çgorzata Rita ≈Åyczywek do wszystkich 07:26 PM
>>> "aaaaa".isupper()
False
>>> "aaaaaA".isupper()
False
>>> "AAAA".isupper()
True
>>> test = "aaaAaaa"
>>> test.isupper() != True and test.islower() != True
True
>>> test.isupper() != True
True
>>> test.islower() != True
True
>>> test.isupper() != True and test.islower() != True
True
>>> test.isupper() == False and test.islower() == False
True
>>> test.isupper()
False
>>> test.isupper() == False
True
>>> test.islower() == False
True
>>> test.isupper() == False and test.islower() == False
True
>>> not test.isupper()
True
>>> not test.isupper() and not test.islower()
True
>>> test = "banana"
>>> test.count("na")
2
>>> test = "banana"
>>> test.count("na")
2
>>> len(test)
6
>>> test[len(test)]
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
IndexError: string index out of range
>>> test[len(test)-1]
'a'
>>> len(test)
6
>>> dlugosc = len(test)
>>> dlugosc
6
>>> test[dlugosc - 1]
'a'
>>> test[dlugosc//2]
'a'
>>> dlugosc // 2
3
>>> test
'banana'
>>> test[100]
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
IndexError: string index out of range
Od Ma≈Çgorzata Rita ≈Åyczywek do wszystkich 07:29 PM
w tej formie nie widzƒô¬†
mozesz mo≈ºe sformatowane
